html, body {
  margin: 0;
  padding: 0;
}
body {
  width: 100vw; /* Define a largura do body como 100% da largura da viewport (janela visível do navegador). */
  height: 100vh; /* Define a altura do body como 100% da altura da viewport. */

  /* Garante que o body nunca fique menor que a tela */
  min-height: 100vh;
  min-width: 100vw;

  margin: 0;
  padding: 0;


  box-sizing: border-box; /* Define que o tamanho total do elemento (width/height) inclui o padding e border,e não apenas o conteúdo interno. */
  /* Entre tanto o body não possui padding ou border. */
  /* Com box-sizing: content-box; (padrão): o width e height consideram apenas o conteúdo. O padding e border são adicionados fora dessas medidas ao calcular o width e height. */

  background: #A9A9A9;
}





/* Colunas →

  Linhas ↓    | 6% |      3fr       |  20% |
              +----+----------------+------+
   60%  ↓     |  1 |        2       |   4  |
   1fr  ↓     |    |                |      |
   30%  ↓     |  3 |        5       |   6  |
*/


.container {
  display: grid;

  width: 100vw;
  height: 100vh;

  grid-template-columns: 6% 3fr 20% 20%;
  grid-template-rows: 60% 1fr 30%;
  gap: 1vw 1vw;

  box-sizing: border-box;
  padding: 8px;

}

.gambiarra1 {
  width: 72.8%;
  height: 32.5%;
  background: #A9A9A9;
  border-top-right-radius: 20vh;
  border-top-right-radius: 2vw;
  margin-top: auto;
  /* Centraliza horizontalmente um elemento bloco com width definido. */
  /* 0 = margem superior/inferior, auto = margem esquerda/direita. */

  /* Quando usado dentro de um container flex com flex-direction: column,
  ele empurra o elemento para o final da coluna (em baixo).
  É o que dá o mesmo efeito que justify-content: flex-end. */
}



.gambiarra2 {
  z-index: 4;
  display: flex;
  justify-content: space-between; /* empurra os filhos pros cantos */
  height: 4.8%;
  width: 100%;
  background: #A9A9A9 ;
  border-top-right-radius: 20px;
  border-top-left-radius: 20px;
}
.gambiarra3 {
  border-top-right-radius: 200px;
  border-top-left-radius: 20px;
  height:100%;
  width: 40%;
  background: #f5f0f0;

}
.gambiarra4 {
  border-top-left-radius: 200px;
  border-top-right-radius: 20px;
  height:100%;
  width: 40%;
  background: #f5f0f0;

}
.gambiarra-do-meio {
  width: 20%;
  height: 2%;
  border-bottom-left-radius: 2000px;
  border-bottom-right-radius: 2000px;
  margin: 0 auto;
  background: #A9A9A9;
}

















.sidebar {
  display: flex;
  flex-direction: column;
  align-items: center;    /* Centraliza horizontalmente */
  /*justify-content: flex-end;*/ /* Manda para baixo */
  padding: 1rem;
  grid-row: 1 / span 3;
  grid-column: 1 / 2;
  background: #f5f0f0;
  border-radius: 2vw;
}

 /* The switch - the box around the slider */
.switch {
  z-index: 8;
  position: relative;
  display: inline-block;
  width: 30px;
  height: 16px;
}

/* Hide default HTML checkbox */
.switch input {
  opacity: 0;
  width: 0;
  height: 0;
}

/* The slider */
.slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: #ccc;
  -webkit-transition: .2s;
  transition: .2s;
}

.slider:before {
  position: absolute;
  content: "";
  height: 12px;
  width: 12px;
  left: 2px;
  bottom: 2px;
  background-color: white;
  -webkit-transition: .2s;
  transition: .2s;
}

input:checked + .slider {
  background-color: #2196F3;
}

input:focus + .slider {
  box-shadow: 0 0 1px grey;
}

input:checked + .slider:before {
  -webkit-transform: translateX(14px);
  -ms-transform: translateX(14px);
  transform: translateX(14px);
}

/* Rounded sliders */
.slider.round {
  border-radius: 34px;
}

.slider.round:before {
  border-radius: 50%;
}





.main {
  /*justify-content: flex-end;*/
  display: flex;
  /*position: relative;*/
/* Caso definíssemos como 'absolute' esse elemento sairia do fluxo normal e se posicionaria relativa ao ancestral com position: relative mais próximo. */  flex-direction: column;
  z-index: 1;
  grid-row: 1 / 4;
  grid-column: 2 / 4;
  background: #f5f0f0;
  border-radius: 2vw;

  /*  Quando você define display: flex em um container, os elementos filhos deixam de ocupar linhas
      diferentes (como no padrão block) e passam a se alinhar lado a lado por padrão (eixo horizontal).
      Se você remover display: flex, os elementos voltam ao comportamento normal em bloco, um embaixo
      do outro. */
}
.bottom-left {
  /*position: relative;*/
  z-index: 10;
  grid-row: 3 / 4;
  grid-column: 2 / 3;
  background: #f5f0f0;
  border-top-right-radius: 20px;
  border-bottom-left-radius: 20px;
  border-top: px solid #A9A9A9;
  border-right: px solid #A9A9A9;
}
.top-right {
  display: flex;
  position: relative;
  padding: 10px;
  grid-row: 1 / 2;
  grid-column: 4 / 4;
  background: #f5f0f0;
  border-radius: 2vw;
}
.top-right .switch {
  margin-left: auto;
  margin-right: 0;
  margin-top: 0;
  z-index: 10;
}


.bottom-right {
  grid-row: 2 / span 2;
  grid-column: 4 / 4;
  background: #f5f0f0;
  border-radius: 2vw;
}



.bottom-right:hover {
  transform: scale(1.026, 1.020);
  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;
}
.bottom-left:hover {
  transform: scale(1.012);
  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;
}
.top-right:hover {
  transform: scale(1.026, 1.015);
  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;
}
.sidebar:hover {
  transform: scale(1.026, 1.01);
  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;
}

.container div {
  transition: transform 0.1s;
}




/* Condição	Significa...
   min-width: 801px	A tela estar mais larga que 800px
   max-width: 600px	A tela estar mais estreita que 600px
   min-height: 700px	A tela estar mais alta que 700px
   max-height: 620px	A tela estar mais baixa que 620px */
@media (min-width: 800px) and (max-height: 620px) {

  .gambiarra2 {
    height: 2vw;
  }
}

/* MEDIA QUERY PARA MOBILE (max-width: 500px) */
@media (max-width: 500px) {
  .container {
    /* Redefina completamente o grid para mobile */
    grid-template-columns: 15% 25% 22% 1fr;
    grid-template-rows: 15% 60% 15% 1fr;
  }

  .top-right .switch {

  }

  .main:hover {
    transform: scale(1.001, 1.001);
    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;
  }
  .bottom-right:hover {
    transform: scale(1.001, 1.001);
    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;
  }
  .bottom-left:hover {
    transform: scale(1.001);
    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;
  }
  .top-right:hover {
    transform: scale(1.001, 1.001);
    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;
  }
  .sidebar:hover {
    transform: scale(1.001, 1.001);
    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;
  }




  .sidebar {
    grid-row: 1 / span 4;
    grid-column: 1 / 2;
    border-radius: 4vw;
  }

  .main {
    grid-row: 2 / 3;
    grid-column: 2 / 5;
    border-radius: 4vw;
  }

  .top-right {
    grid-row: 1 / 2;
    grid-column: 2 / 5;
    border-radius: 4vw;
  }

  .bottom-left {
    grid-row: 3 / 5;
    grid-column: 2 / 4;
    border-radius: 4vw;
  }

  .bottom-right {
    grid-row: 3 / 5;
    grid-column: 4 / 4;
    border-radius: 4vw;
  }

  /* Esconda as gambiarras */
  .gambiarra1,
  .gambiarra2,
  .gambiarra3,
  .gambiarra4,
  .gambiarra-do-meio {
    display: none !important;
  }
}
